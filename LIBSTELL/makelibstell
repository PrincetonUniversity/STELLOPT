#This makefile goes in dirs Debug and Release (first level below LIBSTELL)
include ../../make.inc
FFILE   = '$*''.f'
CFILE   = '$*''.c'
F90FILE = '$*''.f90'
SPATH   = ../Sources

#Contains list of source files (.o) and dependencies
DEPLIST = LIBSTELL.dep
OBJLIST = ../ObjectList
VPATH = $(SPATH):$(SPATH)/FFTpack:$(SPATH)/Coils:$(SPATH)/Modules:$(SPATH)/Linpack:$(SPATH)/Miscel:$(SPATH)/Optimization:$(SPATH)/Track:$(SPATH)/QMRpack:$(SPATH)/SMPINT:$(SPATH)/TOMS:$(SPATH)/Pspline:$(SPATH)/Ezcdf:$(SPATH)/SVDpack:$(SPATH)/GMRes:$(SPATH)/Lsode

#Includes source files and dependency list
include $(DEPLIST)
include $(OBJLIST)

.SUFFIXES :
.SUFFIXES : .f .f90 .o

libstell.a : $(ObjectFiles) 
	$(LINK) $@ $(ObjectFiles)
	$(CLEAN_ARCH)
	
libstell.so : $(ObjectFiles) 
	$(LINK_C) -o $@ $(ObjectFiles) $(LIB_LINK)
	$(CLEAN_ARCH)

#Compile object files defined in OBJLIST.
.f.o :
	@cp $< $(FFILE)
	@if grep -q '^!DEC\$$' $<; then \
		awk -f $(HOME_BIN)/awk_cdir.awk $< > $(CFILE) ; \
		echo '	CPP $<'; \
		$(PRECOMP) $(CFILE) $(FFILE); \
		rm -f $(CFILE); \
	fi
	@if grep -q '^#if' $<; then \
		cp $< $(CFILE); \
		echo '	CPP $<';\
		$(PRECOMP) $(CFILE) $(FFILE); \
		rm -f $(CFILE);\
	fi
	@if [ "$<" = "../Sources/Modules/bsc_T.f" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(FFILE) ; \
	elif [ "$<" = "../Sources/Modules/compression.f" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(FFILE) ; \
	else \
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS) $(MOD_PATH).. $(INC_PATH) -c $(FFILE) ; \
	fi

.f90.o :
	@cp $< $(F90FILE)
	@if grep -q '^!DEC\$$' $<; then \
		awk -f $(HOME_BIN)/awk_cdir.awk $< > $(CFILE) ; \
		echo '	CPP $<'; \
		$(PRECOMP) $(CFILE) $(F90FILE); \
		rm -f $(CFILE); \
	fi
	@if grep -q '^#if' $<; then \
		cp $< $(CFILE); \
		echo '	CPP $<';\
		$(PRECOMP) $(CFILE) $(F90FILE); \
		rm -f $(CFILE);\
	fi
	@if [ "$<" = "../Sources/Modules/stel_tools.f90" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(F90FILE) ; \
	elif [ "$<" = "../Sources/Modules/mir_tools.f90" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(F90FILE) ; \
	elif [ "$<" = "../Sources/Modules/virtual_casing_mod.f90" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(F90FILE) ; \
	elif [ "$<" = "../Sources/Modules/boozer_utils.f90" ]; then\
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS_D) $(MOD1_PATH) $(MOD_PATH).. $(INC_PATH) -c $(F90FILE) ; \
	else \
		echo "	FTN $<" ;\
		$(COMPILE) $(FLAGS) $(MOD_PATH).. $(INC_PATH) -c $(F90FILE) ; \
	fi

clean:
	- rm -f *.o *.mod *.a *.so
