#!/usr/bin/env python3
import sys, os
sys.path.insert(0, '../../pySTEL/')
import numpy as np                    #For Arrays
from math import pi
from libstell.libstell import read_vmec

try:
	qtCreatorPath=os.environ["STELLOPT_PATH"]
except KeyError:
	print("Please set environment variable STELLOPT_PATH")
	sys.exit(1)
failtol = 1.0
filename='wout_QAS.nc'
data=read_vmec(filename)
if not data:
    print('ERROR Opening File: '+filename)
    sys.exit(0)
else:
    print('EXTENSION: '+filename)
print('==== Scalars ====')
varlist={}
varlist['aspect']=4.469347453837751
varlist['b0']=1.4391860541463803
varlist['wp']=0.0037987450295760374
varlist['betatot']=0.04086881876026562
varlist['volume']=2.9628141556296685
lfail = 0;
for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    perct = 100*(abs(act-cal)/act)
    print('  '+temp+': '+str(cal)+'   '+str(act)+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
print('==== Vectors ====')
varlist={}

varlist['iotaf']=np.array([[0.34820217], [0.35360798], [0.3590436 ], [0.36435232], [0.36940254], [0.374247  ], [0.37890832], \
 [0.38340506], [0.38774794], [0.39194987], [0.39602092], [0.39997274], [0.40381468], [0.40755651], [0.411206  ], \
 [0.41477097], [0.4182576 ], [0.42167209], [0.42501951], [0.42830499], [0.4315327 ], [0.43470688], [0.43783105], \
 [0.44090882], [0.44394323], [0.44693738], [0.44989393], [0.45281565], [0.45570488], [0.45856411], [0.4613955 ], \
 [0.46420134], [0.46698368], [0.46974469], [0.47248632], [0.47521067], [0.47791965], [0.48061527], [0.4832994 ], \
 [0.48597401], [0.48864092], [0.49130203], [0.49395912], [0.496614  ], [0.49926836], [0.50192393], [0.50458225], \
 [0.50724492], [0.50991335], [0.51258896], [0.51527298], [0.51796663], [0.52067095], [0.52338692], [0.52611531], \
 [0.52885686], [0.53161208], [0.53438141], [0.53716506], [0.53996317], [0.54277564], [0.54560227], [0.54844264], \
 [0.55129622], [0.55416226], [0.55703993], [0.55992814], [0.56282576], [0.56573146], [0.56864379], [0.57156117], \
 [0.57448196], [0.57740435], [0.58032649], [0.58324641], [0.58616213], [0.58907155], [0.59197255], [0.59486292], \
 [0.59774048], [0.60060294], [0.60344801], [0.60627331], [0.60907648], [0.61185505], [0.61460651], [0.61732832], \
 [0.62001786], [0.62267245], [0.6252893 ], [0.62786552], [0.63039811], [0.63288392], [0.63531968], [0.6377019 ], \
 [0.64002695], [0.64229096], [0.64448983], [0.64661916], [0.64867429], [0.6506502 ], [0.65254159], [0.65434284], \
 [0.65604803], [0.65765097], [0.65914523], [0.66052405], [0.66178055], [0.66290771], [0.6638986 ], [0.66474631], \
 [0.66544422], [0.66598611], [0.66636636], [0.66657999], [0.666623  ], [0.66649258], [0.66618733], [0.6657073 ], \
 [0.66505442], [0.66423301], [0.66324986], [0.66211398], [0.66083728], [0.65943509], [0.65792598], [0.65633148], [0.65470004]])
varlist['presf']=np.array([[6.85537769e+04], [6.85082582e+04], \
 [6.84595520e+04], [6.84039291e+04], [6.83403752e+04], [6.82680077e+04], [6.81860662e+04], [6.80939030e+04], [6.79909730e+04], [6.78768256e+04], \
 [6.77510962e+04], [6.76134978e+04], [6.74638136e+04], [6.73018896e+04], [6.71276280e+04], [6.69409805e+04], [6.67419418e+04], [6.65305447e+04], \
 [6.63068536e+04], [6.60709602e+04], [6.58229783e+04], [6.55630393e+04], [6.52912885e+04], [6.50078806e+04], [6.47129768e+04], [6.44067411e+04], \
 [6.40893374e+04], [6.37609273e+04], [6.34216667e+04], [6.30717048e+04], [6.27111813e+04], [6.23402250e+04], [6.19589527e+04], [6.15674675e+04], \
 [6.11658582e+04], [6.07541984e+04], [6.03325459e+04], [5.99009424e+04], [5.94594135e+04], [5.90079683e+04], [5.85466001e+04], [5.80752866e+04], \
 [5.75939900e+04], [5.71026584e+04], [5.66012260e+04], [5.60896146e+04], [5.55677342e+04], [5.50354845e+04], [5.44927562e+04], [5.39394324e+04], \
 [5.33753899e+04], [5.28005013e+04], [5.22146363e+04], [5.16176638e+04], [5.10094533e+04], [5.03898774e+04], [4.97588131e+04], [4.91161445e+04], \
 [4.84617641e+04], [4.77955755e+04], [4.71174953e+04], [4.64274550e+04], [4.57254032e+04], [4.50113080e+04], [4.42851586e+04], [4.35469679e+04], \
 [4.27967741e+04], [4.20346430e+04], [4.12606699e+04], [4.04749815e+04], [3.96777379e+04], [3.88691342e+04], [3.80494024e+04], [3.72188132e+04], \
 [3.63776773e+04], [3.55263468e+04], [3.46652170e+04], [3.37947275e+04], [3.29153630e+04], [3.20276548e+04], [3.11321814e+04], [3.02295696e+04], \
 [2.93204945e+04], [2.84056806e+04], [2.74859015e+04], [2.65619806e+04], [2.56347904e+04], [2.47052529e+04], [2.37743384e+04], [2.28430656e+04], \
 [2.19125002e+04], [2.09837540e+04], [2.00579837e+04], [1.91363891e+04], [1.82202115e+04], [1.73107316e+04], [1.64092674e+04], [1.55171710e+04], \
 [1.46358268e+04], [1.37666474e+04], [1.29110709e+04], [1.20705566e+04], [1.12465817e+04], [1.04406363e+04], [9.65421936e+03], [8.88883328e+03], \
 [8.14597890e+03], [7.42714975e+03], [6.73382612e+03], [6.06746866e+03], [5.42951175e+03], [4.82135638e+03], [4.24436271e+03], [3.69984220e+03], \
 [3.18904940e+03], [2.71317330e+03], [2.27332824e+03], [1.87054449e+03], [1.50575830e+03], [1.17980157e+03], [8.93391097e+02], [6.47117319e+02], \
 [4.41432633e+02], [2.76639241e+02], [1.52876526e+02], [7.01079387e+01], [2.81074052e+01], [6.40982342e+00]])
varlist['jcurv']=np.array([[  -954.83666308], [ -1939.95252082], [ -2925.06837856], [ -3811.80238304], [ -4615.98429029], [ -5351.2515007 ], [ -6029.29559662], [ -6660.08797414], \
 [ -7252.08582831], [ -7812.41970264], [ -8347.06376531], [ -8860.98992828], [ -9358.30687894], [ -9842.38504923], [-10315.96850281], [-10781.2746777 ], \
 [-11240.0828794 ], [-11693.81237815], [-12143.59092362], [-12590.31445027], [-13034.69870869], [-13477.32351969], [-13918.67031174], [-14359.15356596], \
 [-14799.14675824], [-15239.0033535 ], [-15679.07337464], [-16119.71603562], [-16561.30889753], [-17004.25397562], [-17448.98119587], [-17895.94957125], \
 [-18345.64643977], [-18798.58508025], [-19255.30099505], [-19716.34712507], [-20182.28823746], [-20653.69470375], [-21131.13586417], [-21615.17315209], \
 [-22106.35313256], [-22605.20058952], [-23112.21177749], [-23627.84793605], [-24152.52914889], [-24686.62861311], [-25230.4673701 ], [-25784.3095345 ], \
 [-26348.35804606], [-26922.75095565], [-27507.55824654], [-28102.7791814 ], [-28708.340156  ], [-29324.09303234], [-29949.8139163 ], [-30585.20233865], \
 [-31229.8807915 ], [-31883.39456918], [-32545.21185693], [-33214.72400917], [-33891.24595609], [-34574.01667707], [-35262.19967846], [-35954.88341445], \
 [-36651.08159121], [-37349.73329713], [-38049.70290517], [-38749.77969819], [-39448.67717278], [-40145.03198414], [-40837.40250068], [-41524.2669462 ], \
 [-42204.02111526], [-42874.97565816], [-43535.35294228], [-44183.28350867], [-44816.80215406], [-45433.84368471], [-46032.23839932], [-46609.70737711], \
 [-47163.85766105], [-47692.17744419], [-48192.0313861 ], [-48660.65620307], [-49095.15669895], [-49492.5024207 ], [-49849.52514824], [-50162.9174475 ], \
 [-50429.23254123], [-50644.88577694], [-50806.15799429], [-50909.20112377], [-50950.04637347], [-50924.6153901 ], [-50828.73480878], [-50658.15463743], \
 [-50408.57094982], [-50075.65339707], [-49655.07807703], [-49142.56633513], [-48533.9301067 ], [-47825.12444432], [-47012.30791043], [-46091.91155473], \
 [-45060.71723045], [-43915.94604739], [-42655.3577956 ], [-41277.36221642], [-39781.14303997], [-38166.79575089], [-36435.48008486], [-34589.58830984], \
 [-32632.93038284], [-30570.93712715], [-28410.88261891], [-26162.12701901], [-23836.38113858], [-21447.99407499], [-19014.26530489], [-16555.78267943], \
 [-14096.78780378], [-11665.5703635 ], [ -9294.89298262], [ -7022.44828601], [ -4891.34986445], [ -2950.65893171], [ -1255.94848298], [   438.76196576]])
for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    perct = 100*sum(abs(act-cal)/act)
    print('  '+temp+': '+str(cal[0])+'   '+str(act[0])+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
print('==== Arrays =====')
varlist={}
varlist['rmnc']=np.array([0.10626017748665509, 0.007264001298256034,0.19908958964667334])
varlist['zmns']=np.array([-0.052361755823669816,-0.0032702139193588426,0.3325915977915322])
varlist['lmns']=np.array([0.23351217774329863,0.004495624158062677,-0.15811472620367853])
#varlist['bmnc']=np.array([0.004663530489094516,-0.01013319840184541,-0.14676993780024872])
for temp in varlist:
    mn  = 1; k   = 0
    act = varlist[temp][0]
    cal = data[temp][k,mn]
    s   = str(k)
    m   = str(int(data['xm'][mn]))
    n   = str(int(data['xn'][mn]))
    perct = 100*abs((act-cal)/act)
    print('  '+temp+'['+s+','+m+','+n+']: '+str(cal)+'   '+str(act)+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
    mn  = 2; k   = 0
    act = varlist[temp][1]
    cal = data[temp][k,mn]
    s   = str(k)
    m   = str(int(data['xm'][mn]))
    n   = str(int(data['xn'][mn]))
    perct = 100*abs((act-cal)/act)
    print('  '+temp+'['+s+','+m+','+n+']: '+str(cal)+'   '+str(act)+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
    mn  = 13; k   = 64
    act = varlist[temp][2]
    cal = data[temp][k,mn]
    s   = str(k)
    m   = str(int(data['xm'][mn]))
    n   = str(int(data['xn'][mn]))
    perct = 100*abs((act-cal)/act)
    print('  '+temp+'['+s+','+m+','+n+']: '+str(cal)+'   '+str(act)+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
print('=================')

if (lfail):
    print('  STATUS: FAIL!!!!!')
else:
    print('  STATUS: PASS')

sys.exit(0)




