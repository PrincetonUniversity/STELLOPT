#!/usr/bin/env python3
import sys, os
sys.path.insert(0, '../../pySTEL/')
import numpy as np                    #For Arrays
from math import pi
from libstell.beams3d import BEAMS3D

lfail = 0
failtol = 5.0
filename='beams3d_ORBITS_slow.h5'
b3d = BEAMS3D()
b3d.read_beams3d(filename)

# Calc values
data={}
data['vll0']=b3d.vll_lines[:,0]
#data['vll100']=b3d.vll_lines[:,100]
#data['vll500']=b3d.vll_lines[:,500]
#data['vll1000']=b3d.vll_lines[:,1000]
data['epower']=b3d.epower_prof[:,0]*1.0E20 # factor to make values visible in output.
data['ipower']=b3d.ipower_prof[:,0]*1.0E20
#vperp=b3d.calcVperp()

print(f'BEAMS3D VERSION: {b3d.VERSION:4.2f}')
print('==== Vectors ====')
varlist={}
varlist['vll0']=np.array([ 294098.92275, 357022.55112, 410409.58524, 457610.04502, 500377.73626, \
  539767.36155, 576471.79483, 610975.16798, 643631.55728, 674709.20194, \
  704417.08726, 732921.7956 , 760358.65492, 786839.3799 , 812457.46683, \
  837292.1002 , 861411.04398, 884872.82269, 907728.39439, 930022.4533 , \
  975415.77801,1164728.6686 ,1327309.234  ,1472041.689  ,1603765.4646 , \
 1725462.4299 ,1839124.1199 ,1946158.8989 ,2047606.2588 ,2144259.3879 , \
 2236739.8717 ,2325545.5672 ,2411082.5611 ,2493687.2394 ,2573641.968  , \
 2651186.51   ,2726526.516  ,2799839.955  ,2871282.0664 ,2940989.2275 ])
# varlist['vll100']=np.array([ 240854.523244, 328957.67317 , 398027.98763 , 429385.011838, \
#   498286.676465, 500894.221677, 553791.697319, 592916.277815, \
#   631445.102486, 648986.870592, 674908.163197, 742926.513111, \
#   747749.468868, 782807.80939 , 809591.326405, 830649.197126, \
#   822272.083103, 866684.054724, 905590.470121, 926486.900929, \
#   972517.891988,1161914.402583,1323984.997124,1436641.522315, \
#  1595123.771798,1718338.79902 ,1827589.559278,1928016.944493, \
#  2049184.936419,2139648.60888 ,2220169.434799,2313436.296683, \
#  2407773.509362,2491356.564711,2567502.451364,2654735.314257, \
#  2733221.716232,2801921.00284 ,2866765.528738,2948262.309812])
# varlist['vll500']=np.array([      0.      , 233422.290914, 304384.409128, 352330.879499, \
#   472103.366261, 472305.007104, 507139.235087, 490376.855609, \
#   605961.680773, 622497.382727, 593612.293364, 732963.306597, \
#   724479.118073, 806221.154439, 775737.391129, 785330.127446, \
#   837104.552723, 870717.921014, 881730.38995 , 906261.473671, \
#   948277.999649,1177878.533302,1322993.849894,1455661.590418, \
#  1525129.588447,1719621.170866,1829439.758334,1903876.875645, \
#  2051111.589356,2110617.175582,2189476.466124,2305396.519291, \
#  2407307.580795,2475143.339697,2545317.381561,2624677.84123 , \
#  2693024.894543,2775667.828559,2827559.645903,2937613.729566])
# varlist['vll1000']=np.array([      0.      ,      0.      , 240674.170795, 215222.120392, \
#   350399.933027, 425681.794373, 499125.029275, 490493.400745, \
#   603708.650224, 642934.214879, 521493.200286, 657071.084457, \
#   688865.226455, 770126.438917, 770713.28429 , 730303.56655 , \
#   743492.576055, 869433.87409 , 849235.508127, 830558.982416, \
#   938802.041653,1116219.613298,1320430.775089,1447898.883074, \
#  1536848.79246 ,1701754.993879,1803505.970039,1928192.607322, \
#  2054791.642588,2132075.354697,2190470.869251,2316004.756239, \
#  2394558.852349,2483359.182981,2545605.537994,2626368.987129, \
#  2666344.947013,2752054.778753,2820467.674246,2936894.979134])
varlist['epower']=np.array([   0.      ,   0.      ,   0.      ,   0.      ,   0.      ,   0.      , \
    0.      ,   0.      ,   0.      ,   0.      ,   0.      ,  28.862812, \
   79.418672, 143.381757, 193.312091, 235.827475, 272.805164, 337.713613, \
  379.423372, 408.017861, 420.80446 , 451.861694, 466.80554 , 483.870251, \
  497.845964, 519.573167, 528.99232 , 549.472275, 560.27973 , 567.057226, \
  595.87384 , 721.159256, 987.446037,1217.637499,1471.148579,1694.837558, \
 1913.894694,2120.458223,2313.620971,2488.082052,2690.255935,2728.398173, \
 2764.66669 ,2945.692165,3126.583758,3280.974963,3424.813765,3577.350178, \
 3667.018781,3783.634707,2685.710592,1683.145289, 113.554594,   0.      , \
    0.      ,   0.      ,   0.      ,   0.      ,   0.      ,   0.      , \
    0.      ,   0.      ,   0.      ,   0.      ])
varlist['ipower']=np.array([    0.      ,    0.      ,    0.      ,    0.      ,    0.      , \
     0.      ,    0.      ,    0.      ,    0.      ,    0.      , \
     0.      , 7017.425365,12614.745626,14406.433905,11911.005233, \
 10141.554256, 8824.75356 , 8550.706233, 7663.395622, 6876.381456, \
  6027.790234, 5618.025371, 5086.844077, 4682.309935, 4318.971334, \
  4076.816636, 3773.345474, 3589.296391, 3363.948425, 3145.521508, \
  2943.840749, 2465.603308, 2155.034592, 1877.924198, 1711.024874, \
  1552.013545, 1425.933177, 1317.576035, 1222.855508, 1136.986571, \
  1076.298351,  963.994466,  876.812622,  848.012593,  822.239776, \
   790.118992,  757.965481,  731.052794,  694.415784,  666.441286, \
   456.879491,  274.068236,   18.334746,    0.      ,    0.      , \
     0.      ,    0.      ,    0.      ,    0.      ,    0.      , \
     0.      ,    0.      ,    0.      ,    0.      ])
for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    #print(np.array2string(cal,precision=6, separator=','))
    cal = np.where(act==0,0,cal)
    div = np.where(act==0,1,act)
    perct = 100*sum(abs(act-cal)/div)
    print(f'  Quantity: {temp} -- CODE -- REF. -- %')
    for i in range(len(act)):
        perct = 100*abs(act[i]-cal[i])/div[i]
        print(f'  {i} {cal[i]:7.6f} {act[i]:7.6f} {round(perct)}')
        if perct > failtol:
            lfail = 1
    print('=================')
if (lfail):
    print('  STATUS: FAIL!!!!!')
    sys.exit(-1)
else:
    print('  STATUS: PASS')
    sys.exit(0)




