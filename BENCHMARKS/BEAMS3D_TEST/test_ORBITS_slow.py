#!/usr/bin/env python3
import sys, os
sys.path.insert(0, '../../pySTEL/')
import numpy as np                    #For Arrays
from math import pi
from libstell.beams3d import BEAMS3D

lfail = 0
failtol = 5.0
filename='beams3d_ORBITS_slow.h5'
b3d = BEAMS3D()
b3d.read_beams3d(filename)

# Calc values
data={}
data['vll0']=b3d.vll_lines[:,0]
data['vll100']=b3d.vll_lines[:,100]
data['vll500']=b3d.vll_lines[:,500]
data['vll1000']=b3d.vll_lines[:,1000]
data['epower']=b3d.epower_prof[:,0]*1.0E20 # factor to make values visible in output.
data['ipower']=b3d.ipower_prof[:,0]*1.0E20
#vperp=b3d.calcVperp()

print(f'BEAMS3D VERSION: {b3d.VERSION:4.2f}')
print('==== Vectors ====')
varlist={}
varlist['vll0']=np.array([ 294098.92275, 357022.55112, 410409.58524, 457610.04502, 500377.73626, \
  539767.36155, 576471.79483, 610975.16798, 643631.55728, 674709.20194, \
  704417.08726, 732921.7956 , 760358.65492, 786839.3799 , 812457.46683, \
  837292.1002 , 861411.04398, 884872.82269, 907728.39439, 930022.4533 , \
  975415.77801,1164728.6686 ,1327309.234  ,1472041.689  ,1603765.4646 , \
 1725462.4299 ,1839124.1199 ,1946158.8989 ,2047606.2588 ,2144259.3879 , \
 2236739.8717 ,2325545.5672 ,2411082.5611 ,2493687.2394 ,2573641.968  , \
 2651186.51   ,2726526.516  ,2799839.955  ,2871282.0664 ,2940989.2275 ])
varlist['vll100']=np.array([ 282717.651171, 357700.917488, 379593.945751, 434166.076274, \
  507865.30335 , 521342.689166, 577566.810132, 621820.18107 , \
  643003.611857, 659568.174521, 674367.01576 , 749928.609576, \
  752505.748557, 788568.628099, 821248.911841, 834088.994623, \
  864337.251807, 881928.455033, 909963.263199, 926159.912122, \
  973451.53509 ,1145150.166113,1318729.873677,1470340.479957, \
 1606267.558802,1705081.231684,1821728.470936,1914405.195584, \
 2029791.476175,2121185.69061 ,2218471.201794,2311573.222432, \
 2413974.907352,2495103.171846,2579175.707541,2651703.704753, \
 2713428.417262,2812501.106634,2863573.391217,2910764.807344])
varlist['vll500']=np.array([      0.      , 278662.452766, 356773.915775, 387981.778624, \
  468331.407205, 414237.553553, 514287.031027, 570562.136451, \
  647772.641444, 615600.605769, 627781.922628, 734665.973358, \
  740965.579077, 771763.876468, 789889.909124, 812379.926093, \
  849789.674484, 874140.817338, 909645.186791, 903443.688479, \
  960216.988538,1140601.028425,1264789.018119,1467102.935318, \
 1619307.178197,1693263.810759,1813414.468838,1877658.279684, \
 2039002.02607 ,2101313.256286,2221216.409681,2308800.283536, \
 2401563.474693,2478106.340042,2558857.753772,2625778.391515, \
 2689901.138478,2755085.685582,2838375.57485 ,2924055.420625])
varlist['vll1000']=np.array([      0.      ,      0.      , 179441.938371, 327090.862784, \
  416930.315303, 421036.828188, 424266.803897, 537270.081489, \
  599701.141858, 545779.184686, 448067.03938 , 705512.639114, \
  701069.245152, 735021.659102, 766634.217227, 777941.764024, \
  815558.101131, 861501.673424, 902204.642577, 891054.284121, \
  956684.204114,1098446.645432,1210085.599659,1447928.286859, \
 1599239.109764,1656478.587166,1774982.083019,1902525.37609 , \
 2032493.932783,2106728.816122,2189726.095829,2292455.757508, \
 2396764.577247,2495195.103358,2539959.467151,2609682.787277, \
 2661314.22395 ,2771151.643546,2860783.124223,2905307.132962])
varlist['epower']=np.array([0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,2.978817e-19,8.196595e-19,1.479824e-18,1.995152e-18, \
 2.433991e-18,2.815667e-18,3.174593e-18,3.498285e-18,3.771568e-18, \
 4.040178e-18,4.285944e-18,4.493051e-18,4.702538e-18,4.878200e-18, \
 5.059257e-18,5.210403e-18,5.368755e-18,5.500434e-18,5.640376e-18, \
 5.756385e-18,6.209118e-18,8.945263e-18,1.143963e-17,1.210034e-17, \
 1.438360e-17,1.690205e-17,1.917533e-17,2.121840e-17,2.338720e-17, \
 2.501317e-17,2.694854e-17,2.884840e-17,3.022119e-17,3.212499e-17, \
 3.262013e-17,3.189256e-17,3.298883e-17,3.505542e-17,3.665324e-17, \
 3.777253e-17,2.438329e-17,1.618972e-17,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00])*1.0E20
varlist['ipower']=np.array([0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,7.242414e-17,1.301933e-16,1.486861e-16,1.229329e-16, \
 1.046713e-16,9.108159e-17,8.121272e-17,7.316493e-17,6.605360e-17, \
 6.046818e-17,5.566710e-17,5.126153e-17,4.765085e-17,4.428020e-17, \
 4.146908e-17,3.881228e-17,3.656547e-17,3.442239e-17,3.258913e-17, \
 3.082808e-17,2.866890e-17,2.390849e-17,2.052430e-17,1.591652e-17, \
 1.513289e-17,1.448901e-17,1.361646e-17,1.271008e-17,1.200798e-17, \
 1.115763e-17,1.057402e-17,1.004923e-17,9.427136e-18,9.043312e-18, \
 8.330706e-18,7.440458e-18,7.123575e-18,7.042852e-18,6.852692e-18, \
 6.586161e-18,4.137279e-18,2.634671e-18,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00, \
 0.000000e+00,0.000000e+00,0.000000e+00,0.000000e+00])*1.0E20
for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    #print(np.array2string(cal,precision=6, separator=','))
    cal = np.where(act==0,0,cal)
    div = np.where(act==0,1,act)
    perct = 100*sum(abs(act-cal)/div)
    print(f'  Quantity: {temp} -- CODE -- REF. -- %')
    for i in range(len(act)):
        perct = 100*abs(act[i]-cal[i])/div[i]
        print(f'  {i} {cal[i]:7.6f} {act[i]:7.6f} {round(perct)}')
        if perct > failtol:
            lfail = 1
    print('=================')
if (lfail):
    print('  STATUS: FAIL!!!!!')
    sys.exit(-1)
else:
    print('  STATUS: PASS')
    sys.exit(0)




