#!/usr/bin/env python3
import sys, os
sys.path.insert(0, '../../pySTEL/')
import numpy as np                    #For Arrays
from math import pi
from libstell.beams3d import read_beams3d

try:
	qtCreatorPath=os.environ["STELLOPT_PATH"]
except KeyError:
	print("Please set environment variable STELLOPT_PATH")
	sys.exit(1)

lfail = 0
failtol = 1.0
filename='beams3d_ORBITS.h5'
data=read_beams3d(filename)
if not data:
    print('ERROR Opening File: '+filename)
    sys.exit(0)

# Calc values
rho = np.sqrt(data['S_lines'])
rho_max = np.max(rho,axis=1)
rho_min = np.min(rho,axis=1)
data['delta'] = rho_max-rho_min
x = data['R_lines']-10.0
y = data['Z_lines']
theta = np.arctan2(y,x)
theta = np.where(theta > np.pi,theta-pi,theta)
data['turning'] = np.max(theta,axis=1)
data['R0']=data['R_lines'][:,0]
data['R1']=data['R_lines'][:,1]
data['R100']=data['R_lines'][:,100]
data['R500']=data['R_lines'][:,500]

print('BEAMS3D VERSION: ' + str(data['VERSION']))
print('==== Vectors ====')
varlist={}
varlist['turning']=np.array([0.12275448, 0.1788069,  0.23483922, 0.29094046, 0.34722868, 0.40375728,\
 0.46065893, 0.51799329, 0.57587523, 0.63441059, 0.69368621, 0.75391989,\
 0.81514834, 0.87755329, 0.94131251, 1.0066042,  1.073641,   1.14261056,\
 1.21404663, 1.2880335,  1.36508321, 1.44570684, 1.53053939, 1.62039918,\
 1.71639094, 1.81999506, 1.93335501, 2.05975875, 2.20481267, 2.37949053,\
 2.61309783, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,\
 0.00000000, 0.00000000, 0.00000000, 0.00000000 ])
varlist['delta']= np.array([0.00946046, 0.01374876, 0.01800757, 0.02223544, 0.026432,   0.03059698,\
 0.03473095, 0.038831,   0.04289777, 0.04693171, 0.05093049, 0.05489528,\
 0.05882575, 0.06272063, 0.06658121, 0.07040614, 0.07419578, 0.07794811,\
 0.08166657, 0.08535033, 0.08900042, 0.09261682, 0.09619758, 0.09974838,\
 0.10326324, 0.10674989, 0.11020544, 0.11363556, 0.11703701, 0.12041313,\
 0.12377785, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,\
 0.00000000, 0.00000000, 0.00000000, 0.00000000])
varlist['R0'] = np.array([10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5,\
 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, \
 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5])
varlist['R1'] = np.array([10.499993,10.499977,10.499955,10.499925,10.499887,10.499842,10.49979 ,\
 10.49973 ,10.499664,10.49959 ,10.499509,10.499421,10.499327,10.499225,\
 10.499117,10.499002,10.498881,10.498754,10.498621,10.498481,10.498336,\
 10.498185,10.498028,10.497867,10.497699,10.497527,10.49735 ,10.497168,\
 10.496982,10.496791,10.496596,10.496397,10.496195,10.495988,10.495778,\
 10.495565,10.495348,10.495129,10.494907,10.494682])
varlist['R100'] = np.array([10.499754,10.499221,10.498481,10.497609,10.496721,10.495958,10.495459,\
 10.495355,10.495746,10.496633,10.497904,10.499233,10.499991,10.499159,\
 10.495212,10.486073,10.469123,10.441477,10.400462,10.344385,10.273484,\
 10.190535,10.101011,10.012298, 9.932656, 9.87052 , 9.835364, 9.842673,\
  9.930177,10.205285,10.613087, 9.511118,10.425539, 9.862182, 9.61147 ,\
  9.512498, 9.503452, 9.576964, 9.733208, 9.957324])
varlist['R500'] = np.array([10.503795,10.50326 ,10.500565,10.495214,10.486654,10.474814,10.460831,\
 10.447395,10.438981,10.44081 ,10.456343,10.481887,10.499768,10.479954,\
 10.405559,10.307016,10.251583,10.303565,10.476402,10.579347,10.342541,\
 10.078681,10.120357,10.4684  ,10.197641, 9.873238,10.388229,10.003576,\
  9.851556, 9.782974,10.425748, 9.478827, 9.721426,10.438318, 9.61527 ,\
  9.972791, 9.644133,10.326148, 9.501027,10.320469])
for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    #print(np.array2string(cal,precision=6, separator=','))
    cal = np.where(act==0,0,cal)
    div = np.where(act==0,1,act)
    perct = 100*sum(abs(act-cal)/div)
    print('  '+temp+': '+str(cal[0])+'   '+str(act[0])+'   '+str(int(perct))+'%')
    if perct > failtol:
        lfail = 1
print('=================')

if (lfail):
    print('  STATUS: FAIL!!!!!')
else:
    print('  STATUS: PASS')

sys.exit(0)




