#!/usr/bin/env python3
import sys, os
sys.path.insert(0, '../../pySTEL/')
import numpy as np                    #For Arrays
from math import pi
from libstell.beams3d import read_beams3d

try:
	qtCreatorPath=os.environ["STELLOPT_PATH"]
except KeyError:
	print("Please set environment variable STELLOPT_PATH")
	sys.exit(1)

lfail = 0
failtol = 2.5
filename='beams3d_ORBITS_er.h5'
data=read_beams3d(filename)
if not data:
    print('ERROR Opening File: '+filename)
    sys.exit(0)

# Calc values
rho = np.sqrt(data['S_lines'])
rho_max = np.max(rho,axis=1)
rho_min = np.min(rho,axis=1)
data['delta'] = rho_max-rho_min
x = data['R_lines']-10.0
y = data['Z_lines']
theta = np.arctan2(y,x)
theta = np.where(theta > np.pi,theta-pi,theta)
data['turning'] = np.max(theta,axis=1)
data['R0']=data['R_lines'][:,0]
data['R1']=data['R_lines'][:,1]
data['R100']=data['R_lines'][:,100]
data['R500']=data['R_lines'][:,500]

print('BEAMS3D VERSION: ' + str(data['VERSION']))
print('==== Vectors ====')
varlist={}
varlist['turning']=np.array([0.731838,0.790795,0.850828,0.912093,0.974706,1.038889,1.104832,1.17283, \
 1.243056,1.316021,1.392038,1.47161 ,1.555389,1.644199,1.739122,1.841615, \
 1.953885,2.079128,2.223145,2.39678 ,2.630406,3.141537,3.137031,3.140399, \
 3.140612,3.139513,3.124417,3.137346,3.131421,3.135479,3.137099,3.128988, \
 3.140575,3.049741,3.140872,3.131329,3.139236,3.092125,3.102366,3.070513])
varlist['delta']= np.array([0.054275,0.058177,0.062093,0.066008,0.069844,0.073672,0.077491,0.081266, \
 0.085027,0.088759,0.092453,0.096132,0.099778,0.103395,0.106995,0.110572, \
 0.114112,0.11766 ,0.121189,0.124668,0.128161,0.054815,0.046612,0.042663, \
 0.039882,0.037724,0.035944,0.034453,0.033163,0.032031,0.031029,0.030138, \
 0.029342,0.0286  ,0.027936,0.02734 ,0.026778,0.02624 ,0.025781,0.025343])
varlist['R0'] = np.array([10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5,\
 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, \
 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5, 10.5])
varlist['R1'] = np.array([10.49942 ,10.499323,10.499219,10.499107,10.498988,10.498862,10.498729, \
 10.498589,10.498442,10.498289,10.49813 ,10.497966,10.497795,10.497618, \
 10.497434,10.497243,10.497045,10.49684 ,10.496629,10.496412,10.49619 , \
 10.495963,10.495731,10.495494,10.495253,10.495006,10.494756,10.494502, \
 10.494243,10.493981,10.493715,10.493446,10.493174,10.492899,10.492621, \
 10.49234 ,10.492057,10.491772,10.491486,10.491197])
varlist['R100'] = np.array([10.493531,10.49579 ,10.498172,10.49983 ,10.499366,10.494715,10.483092, \
 10.461105,10.425261,10.372748,10.302666,10.217086,10.121516,10.024057, \
  9.93403 , 9.860654, 9.813137, 9.804805, 9.867944,10.106374,10.624615, \
  9.574294,10.212791, 9.699082, 9.53475 , 9.499776, 9.564192, 9.732641, \
  9.991137,10.273848,10.466821,10.485276,10.348775,10.139999, 9.928042, \
  9.748598, 9.616247, 9.536444, 9.511127, 9.540217])
varlist['R500'] = np.array([10.402748,10.420905,10.459104,10.495759,10.484648,10.394469,10.270076, \
 10.205655,10.279346,10.495961,10.564013,10.233509,10.008089,10.192777, \
 10.474815, 9.921363, 9.989771,10.457151, 9.692552,10.130114,10.581929, \
  9.612629, 9.490115, 9.567085,10.498358, 9.519236,10.404771, 9.508298, \
 10.48246 , 9.586777, 9.95068 ,10.198179, 9.509421,10.282663,10.013566, \
  9.526892,10.309831,10.088302, 9.51169 ,10.132791])

for temp in varlist:
    act = varlist[temp]
    cal = data[temp]
    #print(np.array2string(cal,precision=6, separator=','))
    cal = np.where(act==0,0,cal)
    div = np.where(act==0,1,act)
    perct = 100*np.sqrt(sum((act-cal)**2)/len(act))/np.mean(act) #normalized root mean squared deviation
    print(f'  {temp}: {cal[0]:.4f}   {act[0]:.4f}   {perct:.2f}%')
    if perct > failtol:
        lfail = 1
print('=================')

if (lfail):
    print('  STATUS: FAIL!!!!!')
else:
    print('  STATUS: PASS')

sys.exit(0)




